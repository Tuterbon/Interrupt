#include <avr/io.h> // библиотека имен и описаний, названий аппаратуры в конкретном МК  
#include <avr/interrupt.h> // библиотека описаний для работы с прерываниями, как написать ISR, какие вектора есть
#include <avr/sfr_defs.h>// библиотека для выполнения проверочных побитовых операций
ISR(PCINT_vect)//Процедура обработки прерывания :: В скобках указывается имя вектора, вызовы на прерывание для которого будут поступать.
{
	for(int i=0; i<7; i++)// Цикл для определения нажатой кнопки
	{
			if (bit_is_clear(PINB,i))// Этот оператор ветвления используется для определения какая кнопка была нажата
		{
			if (bit_is_clear(PIND,i))// Данный оператор сравнения проверяет в каком состоянии находится управляемый данной кнопкой светодиод , что бы принять решение если он включен то выключить, если он выключен то включить.
			{
				PORTD|=(1<<i); //данное условие выполняется если светодиод был выключен, теперь выполняется его зажигание путем записи лог 1, в регистр PORTD в разряд номер которого равен значению переменной условия цикла.
			}
			else // Оператор для выполнения альтернативных действий в случае если if получил от проверяемого условия значение false. Else писать после каждого if необязательно. Писать можно по желанию.
			{
				PORTD&=~(1<<i); // Действия выполняемые в операторе else :: В данном случае выполняется действие если светодиод горит, в регистр PORTD, в бит номер которого соответствует значению переменной условия цикла, записывается лог 0.
			}
		}
	}
}
int main(void) // Объявление главной функции main, int – значение возвращаемой от функции переменной, main – имя функции, (void) – в скобках указывается тип принимаемых функцией переменных, void – ничего.
{
	GIMSK|=(1<<5); // Разрешение прерывания от PCINT, GIMSK – регистр маски, разрешает или запрещает прерывания для всей аппаратуры кроме таймеров/счетчиков
	PCMSK|=(1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5)|(1<<6); // Разрешение конкретным ножкам порта B вызывать прерывание вектора PCINT, PCMSK – дополнительный регистр маски для разрешения или запрета, вызова прерывания PCINT конкретными ножками порта В у МК.
	Sei(); // установка 7 бита регистра SREG в лог 1. Для разрешения работы системы прерываний.
	DDRB=0x00; //настройка ножек как входы
	PORTB=0x7F; //подключение подтягивающих резисторов для ножек порта В.
	DDRD=0xFF;	//Настройка ножек порта D, как выходов
    while(1) // бесконечный цикл, для не допуска зависания программы на МК.
    { 
    }
}
